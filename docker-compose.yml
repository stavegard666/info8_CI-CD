version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./scripts/init_db.js:/docker-entrypoint-initdb.d/init_db.js:ro
    environment:
      - MONGO_INITDB_DATABASE=tinyX
    networks:
      - tinyx-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - tinyx-network

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/test
    volumes:
      - neo4j-data:/data
    networks:
      - tinyx-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - tinyx-network

  #Microservices Quarkus
  repo-post:
    build:
      context: ./repo-post
    container_name: repo-post
    ports:
      - "30081:8081"
    depends_on:
      - mongodb
    networks:
      - tinyx-network

  repo-social:
    build:
      context: ./repo-social
    container_name: repo-social
    ports:
      - "30082:8082"
    depends_on:
      - mongodb
      # - neo4j
    networks:
      - tinyx-network

  srvc-search:
    build:
      context: ./srvc-search
    container_name: srvc-search
    ports:
      - "30083:8083"
    # depends_on:
      # - elasticsearch
    networks:
      - tinyx-network

  srvc-user-timeline:
    build:
      context: ./srvc-user-timeline
    container_name: srvc-user-timeline
    ports:
      - "30084:8084"
    depends_on:
      - mongodb
      # - redis
    networks:
      - tinyx-network

  srvc-home-timeline:
    build:
      context: ./srvc-home-timeline
    container_name: srvc-home-timeline
    ports:
      - "30085:8085"
    depends_on:
      - mongodb
      # - redis
    networks:
      - tinyx-network

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "30080:8080"
    depends_on:
      - repo-post
      - repo-social
      - srvc-search
      - srvc-user-timeline
      - srvc-home-timeline
    networks:
      - tinyx-network

#Network Configuration
networks:
  tinyx-network:
    driver: bridge

#Volume Configuration
volumes:
  mongo-data:
  es-data:
  neo4j-data:
  redis-data:
